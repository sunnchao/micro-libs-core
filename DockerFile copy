# 先为克隆Git仓库设置一个临时的基础镜像
FROM alpine/git as git-clone
WORKDIR /app
# 克隆特定分支的代码
RUN git clone --branch sunchaowang --single-branch https://github.com/sunchaowang/new-api.git .

# 使用node镜像构建前端
FROM node:16 as builder

WORKDIR /build

# 现在从git-clone阶段复制代码
COPY --from=git-clone /app/web/package.json .
RUN npm config set registry https://registry.npmmirror.com/
RUN npm install
# 再次从git-clone阶段复制代码
COPY --from=git-clone /app/web .
COPY --from=git-clone /app/VERSION .
RUN DISABLE_ESLINT_PLUGIN='true' REACT_APP_VERSION=$(cat VERSION) npm run build

# 使用golang镜像构建后端
FROM golang AS builder2

ENV GO111MODULE=on \
    CGO_ENABLED=1 \
    GOOS=linux

WORKDIR /build
# 从git-clone阶段复制Go模块文件
COPY --from=git-clone /app/go.mod .
COPY --from=git-clone /app/go.sum .
RUN go mod download
# 从builder阶段复制前端构建产物
COPY --from=builder /build/build /app/web/build
# 从git-clone阶段复制所有后端代码
COPY --from=git-clone /build /app
RUN go build -ldflags "-s -w -X 'one-api/common.Version=$(cat VERSION)' -extldflags '-static'" -o one-api

# 设置最终的基础镜像
FROM alpine

RUN apk update \
    && apk upgrade \
    && apk add --no-cache ca-certificates tzdata \
    && update-ca-certificates 2>/dev/null || true

# 从builder2阶段复制构建的可执行文件
COPY --from=builder2 /build/one-api /
EXPOSE 3000
WORKDIR /data
ENTRYPOINT ["/one-api"]
